services:
  app:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: my_image_service
    ports:
      - "3000:3000"
    networks:
      - app_network
    volumes:
      - ./src:/app/src
      - ./dist:/app/dist
      - /app/node_modules
    env_file:
      - .env  
    environment:
      - PGUSER=admin
      - PGHOST=postgres
      - PGDATABASE=my_app_db
      - PGPASSWORD=admin
      - PGPORT=5432
      - NODE_ENV=development
      - YC_ACCESS_KEY_ID=${YC_ACCESS_KEY_ID}
      - YC_SECRET_ACCESS_KEY=${YC_SECRET_ACCESS_KEY}
      - YC_ENDPOINT=${YC_ENDPOINT:-https://storage.yandexcloud.net}
      - YC_BUCKET_NAME=${YC_BUCKET_NAME:-ars.avatar}
    depends_on:
      - postgres
    command:  npm run dev

  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: my_app_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    ports:
      - "5433:5432"  

  pgadmin:
    image: dpage/pgadmin4
    container_name: my_pgadmin_image
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@example.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5051:80"
    networks:
      - app_network
    depends_on:
      - postgres    

volumes:
  postgres_data:

networks:
  app_network:
    driver: bridge

  microservices-network:
    driver: bridge
